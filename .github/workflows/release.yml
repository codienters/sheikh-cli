name: Release Pipeline

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 2.0.2)'
        required: true
        type: string

jobs:
  # Prepare Release
  prepare:
    runs-on: ubuntu-latest
    name: Prepare Release
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=v$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
    
    - name: Validate version format
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Invalid version format: $VERSION"
          exit 1
        fi

  # Build Release
  build:
    runs-on: ubuntu-latest
    name: Build Release
    needs: prepare
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build project
      run: npm run build
    
    - name: Update package version
      run: |
        npm version ${{ needs.prepare.outputs.version }} --no-git-tag-version
        cat package.json | grep version
    
    - name: Create package
      run: npm pack
    
    - name: Upload package
      uses: actions/upload-artifact@v4
      with:
        name: npm-package
        path: sheikh-cli-*.tgz

  # Publish to NPM
  publish-npm:
    runs-on: ubuntu-latest
    name: Publish to NPM
    needs: [prepare, build]
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Download package
      uses: actions/download-artifact@v4
      with:
        name: npm-package
    
    - name: Install dependencies
      run: npm ci
    
    - name: Update package version
      run: npm version ${{ needs.prepare.outputs.version }} --no-git-tag-version
    
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Verify publication
      run: |
        echo "Verifying package publication..."
        npm view @codienters/sheikh-cli@${{ needs.prepare.outputs.version }}

  # Create GitHub Release
  create-release:
    runs-on: ubuntu-latest
    name: Create GitHub Release
    needs: [prepare, build]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Download package
      uses: actions/download-artifact@v4
      with:
        name: npm-package
    
    - name: Generate changelog
      id: changelog
      run: |
        echo "Generating changelog for version ${{ needs.prepare.outputs.version }}..."
        CHANGELOG=$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD 2>/dev/null || echo "- Initial release")
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.prepare.outputs.tag }}
        release_name: Sheikh-CLI v${{ needs.prepare.outputs.version }}
        body: |
          ## Sheikh-CLI v${{ needs.prepare.outputs.version }}
          
          ### 🚀 Installation
          ```bash
          npm install -g @codienters/sheikh-cli
          ```
          
          ### 📋 Changes
          ${{ steps.changelog.outputs.changelog }}
          
          ### 🔧 Usage
          ```bash
          sheikh chat
          sheikh config --init
          sheikh agents --list
          ```
          
          ### 📚 Documentation
          - [README](https://github.com/codienters/sheikh-cli#readme)
          - [Agents Guide](https://github.com/codienters/sheikh-cli/blob/main/AGENTS.md)
          - [Changelog](https://github.com/codienters/sheikh-cli/blob/main/CHANGELOG.md)
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./sheikh-cli-*.tgz
        asset_name: sheikh-cli-${{ needs.prepare.outputs.version }}.tgz
        asset_content_type: application/gzip

  # Notify Success
  notify:
    runs-on: ubuntu-latest
    name: Notify Success
    needs: [publish-npm, create-release]
    if: always()
    
    steps:
    - name: Release Success Notification
      run: |
        echo "🎉 Release v${{ needs.prepare.outputs.version }} completed successfully!"
        echo "📦 Published to NPM: @codienters/sheikh-cli@${{ needs.prepare.outputs.version }}"
        echo "🏷️ Created GitHub Release: ${{ needs.prepare.outputs.tag }}"
